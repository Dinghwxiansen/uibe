# Generated by Django 2.0 on 2019-09-02 17:56

import apps.base.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='用户名(学号/教职工号/研究生)')),
                ('head', models.CharField(max_length=150, null=True, verbose_name='头像')),
                ('user_type', models.IntegerField(choices=[(1, '教职工'), (2, '本科生'), (3, '研究生')], default=1, verbose_name='用户类型')),
                ('email', models.EmailField(max_length=128, null=True, verbose_name='邮箱')),
                ('mobile', models.CharField(max_length=32, null=True, verbose_name='手机号')),
                ('status', models.BooleanField(choices=[(True, '启用'), (False, '停用')], default=True, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'permissions': (),
            },
            managers=[
                ('objects', apps.base.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('parent_id', models.BigIntegerField(default=0, verbose_name='父Id')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('code', models.CharField(default=0, max_length=128, verbose_name='编码')),
                ('perms', models.CharField(max_length=128, verbose_name='权限')),
                ('layer', models.IntegerField(default=1, verbose_name='层级')),
                ('order_num', models.IntegerField(default=1, verbose_name='排序')),
                ('url', models.CharField(blank=True, max_length=128, null=True, verbose_name='地址')),
                ('type', models.IntegerField(choices=[(0, '目录'), (1, '菜单'), (2, '按钮')], default=0, verbose_name='类型')),
                ('icon', models.CharField(max_length=256, null=True, verbose_name='图标')),
                ('status', models.BooleanField(choices=[(True, '启用'), (False, '停用')], default=True, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '菜单信息表',
                'verbose_name_plural': '菜单信息表',
                'ordering': ['order_num'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('code', models.CharField(max_length=128, verbose_name='编码')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
                ('menu', models.ManyToManyField(related_name='roles', to='base.Menu', verbose_name='菜单Id')),
            ],
            options={
                'verbose_name': '角色信息表',
                'verbose_name_plural': '角色信息表',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('token', models.CharField(max_length=64, verbose_name='token')),
                ('expr', models.DateTimeField(verbose_name='token到期时间')),
            ],
            options={
                'verbose_name': 'token表',
                'verbose_name_plural': 'token表',
                'db_table': 'base_user_token',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ManyToManyField(related_name='users', to='base.Role', verbose_name='角色id'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
